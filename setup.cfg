# All configuration for plugins and other utils is defined here.
# Read more about `setup.cfg`:
# https://docs.python.org/3/distutils/configfile.html


[flake8]
format = wemake
show-source = True
doctests = True
statistics = False

# Plugins:
max-complexity = 6
max-line-length = 80

# wemake-python-styleguide
max-annotation-complexity = 4
i-control-code = False

extend-exclude =
  .venv
  # Bad code that I write to test things:
  ex.py
  experiments

ignore =
  D100,
  D104,
  D401,
  W504,
  X100,
  WPS113,
  WPS202,
  WPS214,
  WPS235,
  WPS320,
  WPS436,
  WPS440,
  WPS450,
  WPS612,
  RST303,
  RST304,
  DAR103,
  DAR203,

per-file-ignores =
  # Disable some quality checks for the most heavy parts:
  returns/io.py: WPS402
  # Some rules cannot be applied to context:
  returns/context/*.py: WPS204, WPS226, WPS326, WPS430, WPS433
  # We allow `futures` to do attribute access:
  returns/future.py: WPS437
  returns/_generated/futures/*.py: WPS204, WPS433, WPS437
  # We allow reexport:
  returns/pointfree.py: F401, WPS201
  # We allow a lot of durty hacks in our plugins:
  returns/contrib/mypy/*.py: WPS201
  returns/contrib/pytest/plugin.py: WPS430, WPS433, WPS437, WPS609
  # There are multiple assert's in tests:
  tests/*.py: S101, WPS204, WPS218, WPS226, WPS432, WPS436
  # Annotations:
  *.pyi: D103, WPS211, WPS428


[isort]
# isort configuration:
# https://github.com/timothycrosley/isort/wiki/isort-Settings
include_trailing_comma = true
use_parentheses = true
# See https://github.com/timothycrosley/isort#multi-line-output-modes
multi_line_output = 3
default_section = FIRSTPARTY
line_length = 80


[darglint]
# darglint configuration:
# https://github.com/terrencepreilly/darglint
strictness = long


[tool:pytest]
# py.test options:
norecursedirs = *.egg .eggs dist build docs .tox .git __pycache__

# You will need to measure your tests speed with `-n auto` and without it,
# so you can see whether it gives you any performance gain, or just gives
# you an overhead. See `docs/template/development-process.rst`.
addopts =
  --doctest-modules
  --doctest-glob='*.md'
  --doctest-glob='*.rst'
  --cov=returns
  --cov-report=term:skip-covered
  --cov-report=html
  --cov-report=xml
  --cov-branch
  --cov-fail-under=100
  --mypy-ini-file=setup.cfg
  --anyio-backends=asyncio,curio,trio


[coverage:run]
omit =
  # We test mypy plugins with `pytest-mypy-plugins`,
  # which does not work with coverage:
  returns/contrib/mypy/*
  # pytest cannot measure self coverage:
  returns/contrib/pytest/plugin.py

[coverage:report]
exclude_lines =
  # a more strict default pragma
  \# pragma: no cover\b

  ^\s*raise NotImplementedError\b
  ^if TYPE_CHECKING:


[mypy]
# mypy configurations: http://bit.ly/2zEl9WI

# Plugins, includes custom:
plugins =
  returns.contrib.mypy.returns_plugin

# We cannot work without explicit `Any` types and plain generics:
# disallow_any_explicit = True
# disallow_any_generics = True

allow_redefinition = False
check_untyped_defs = True
disallow_untyped_calls = True
ignore_errors = False
ignore_missing_imports = True
implicit_reexport = False
strict_optional = True
strict_equality = True
no_implicit_optional = True
local_partial_types = True
warn_no_return = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True
warn_unreachable = True

# We need this to debug `mypy` plugin:
show_traceback = True


[doc8]
ignore-path = docs/_build
max-line-length = 80
sphinx = True
