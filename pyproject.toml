[tool.poetry]
name = "returns"
version = "0.21.0"
description = "Make your functions return something meaningful, typed, and safe!"
license = "BSD-3-Clause"

authors = [
  "sobolevn <mail@sobolevn.me>"
]

readme = "README.md"

repository = "https://github.com/dry-python/returns"
homepage = "https://returns.readthedocs.io"

keywords = [
  "functional programming",
  "fp",
  "monads",
  "monad",
  "monad transformers",
  "composition",
  "type-safety",
  "mypy",
  "railway-oriented-programming"
]

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Utilities",
  "Typing :: Typed"
]

[tool.poetry.urls]
"Funding" = "https://github.com/sponsors/dry-python"

[tool.poetry.plugins.pytest11]
returns = "returns.contrib.pytest.plugin"

[tool.poetry.plugins.hypothesis]
_ = "returns.contrib.hypothesis._entrypoint"


[tool.poetry.dependencies]
python = "^3.7"

typing-extensions = ">=4.0,<5.0"
mypy = { version = "^1.4.0", optional = true }

[tool.poetry.dev-dependencies]
anyio = "^3.7"
trio = "^0.22"
attrs = "^23.1"
httpx = "^0.24"

wemake-python-styleguide = "^0.17"
flake8-pytest-style = "^1.6"
flake8-pyi = "^23.4"
nitpick = "^0.33"
codespell = "^2.2"
slotscheck = "^0.16"

safety = "^2.3"

pytest = "^7.4"
pytest-cov = "^4.1"
pytest-randomly = "^3.12"
pytest-mypy-plugins = "^1.11"
pytest-subtests = "^0.11"
hypothesis = "^6.79"

sphinx = "^5.2"
sphinx-autodoc-typehints = "^1.23"
sphinxcontrib-mermaid = "0.8.1"
sphinx-typlog-theme = "^0.8"
sphinx-hoverxref = "^1.3"
doc8 = "^1.0"
m2r2 = "^0.3"
tomlkit = "^0.11"

[tool.poetry.extras]
compatible-mypy = ["mypy"]


[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"


[tool.nitpick]
style = "https://raw.githubusercontent.com/wemake-services/wemake-python-styleguide/master/styles/nitpick-style-wemake.toml"


[tool.slotscheck]
strict-imports = true
require-subclass = true
require-superclass = true
exclude-modules = 'returns\.contrib\.mypy'
exclude-classes = 'returns\.primitives\.exceptions:UnwrapFailedError'
