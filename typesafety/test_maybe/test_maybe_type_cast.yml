- case: maybe_correct_cast
  disable_cache: true
  main: |
    from returns.maybe import Maybe

    first: Maybe[ValueError]
    second: Maybe[Exception] = first
    reveal_type(second)  # N: Revealed type is 'returns.maybe.Maybe[builtins.Exception]'


- case: maybe_some_constructor
  disable_cache: true
  main: |
    from returns.maybe import Some

    reveal_type(Some(1))  # N: Revealed type is 'returns.maybe.Maybe[builtins.int*]'


- case: maybe_nothing_const
  disable_cache: true
  main: |
    from returns.maybe import Nothing

    reveal_type(Nothing)  # N: Revealed type is 'returns.maybe.Maybe[<nothing>]'


- case: maybe_result_success_type
  disable_cache: true
  main: |
    from returns.maybe import Maybe

    reveal_type(Maybe.success_type)  # N: Revealed type is 'Type[returns.maybe._Some[Any]]'


- case: maybe_result_failure_type
  disable_cache: true
  main: |
    from returns.maybe import Maybe

    reveal_type(Maybe.failure_type)  # N: Revealed type is 'Type[returns.maybe._Nothing]'

