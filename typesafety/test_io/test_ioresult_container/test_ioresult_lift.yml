- case: ioresult_lift
  disable_cache: true
  main: |
    from returns.io import IOResult

    def test(arg: int) -> str:
        return str(arg)

    r: IOResult[int, str]
    reveal_type(IOResult.lift(test)(r))  # N: Revealed type is 'returns.io.IOResult[builtins.str, builtins.str*]'


- case: ioresult_lift_result
  disable_cache: true
  main: |
    from returns.io import IOResult
    from returns.result import Result

    def test(arg: int) -> Result[str, bool]:
        ...

    reveal_type(IOResult.lift_result(test))  # N: Revealed type is 'def (returns.io.IOResult[builtins.int*, builtins.bool*]) -> returns.io.IOResult[builtins.str*, builtins.bool*]'


- case: ioresult_lift_io
  disable_cache: true
  main: |
    from returns.io import IO, IOResult
    from returns.result import Result

    def test(arg: int) -> IO[float]:
        ...

    r: IOResult[int, str]

    reveal_type(IOResult.lift_io(test))  # N: Revealed type is 'def [_ContraErrorType] (returns.io.IOResult[builtins.int*, _ContraErrorType`-2]) -> returns.io.IOResult[builtins.float*, _ContraErrorType`-2]'
    reveal_type(IOResult.lift_io(test)(r))  # N: Revealed type is 'returns.io.IOResult[builtins.float, builtins.str*]'
