- case: future_result_inheritance_correct2
  disable_cache: false
  main: |
    from typing import Callable, TypeVar, Any, Awaitable, Generator
    from returns.interfaces.specific.future_result import FutureResultLike2
    from returns.primitives.hkt import SupportsKind2
    from returns.future import FutureResult, Future

    T = TypeVar('T')
    E = TypeVar('E')
    N = TypeVar('N')
    I = TypeVar('I')

    class MyClass(
        SupportsKind2['MyClass', T, E],
        FutureResultLike2[T, E],
    ):
        def bind_future_result(
            self, function: Callable[[T], FutureResult[N, E]],
        ) -> MyClass[N, E]:
            ...

        def bind_async_future_result(
            self, function: Callable[[T], Awaitable[FutureResult[N, E]]],
        ) -> MyClass[N, E]:
            ...

        @classmethod
        def from_future_result(
            cls, inner_value: FutureResult[N, I],
        ) -> MyClass[N, I]:
            ...

        @classmethod
        def from_failed_future(
            cls, inner_value: Future[I],
        ) -> MyClass[Any, I]:
            ...

    def test(a: int) -> FutureResult[float, str]:
        ...

    x: MyClass[int, str]
    reveal_type(x.bind_future_result(test))  # N: Revealed type is "main.MyClass[builtins.float*, builtins.str]"


- case: future_result_inheritance_missing
  disable_cache: false
  main: |
    from typing import TypeVar
    from typing_extensions import final
    from returns.interfaces.specific.future_result import FutureResultLike2
    from returns.primitives.hkt import SupportsKind2

    T = TypeVar('T')
    E = TypeVar('E')

    @final
    class MyClass(
        SupportsKind2['MyClass', T, E],
        FutureResultLike2[T, E],
    ):
        ...
  out: |
    main:10: error: Final class main.MyClass has abstract attributes "alt", "apply", "bind", "bind_async", "bind_async_future", "bind_async_future_result", "bind_awaitable", "bind_future", "bind_future_result", "bind_io", "bind_ioresult", "bind_result", "compose_result", "from_failed_future", "from_failed_io", "from_failure", "from_future", "from_io", "from_ioresult", "from_result", "from_value", "lash", "map", "swap"


- case: future_result_inheritance_wrong2
  disable_cache: false
  main: |
    from typing import Callable, TypeVar, Generator, Awaitable, Any
    from returns.interfaces.specific.future_result import FutureResultBased2
    from returns.primitives.hkt import SupportsKind2
    from returns.io import IOResult
    from returns.result import Result
    from returns.future import Future, FutureResult

    T = TypeVar('T')
    E = TypeVar('E')
    N = TypeVar('N')

    class MyClass(
        SupportsKind2['MyClass', T, E],
        FutureResultBased2[T, E],
    ):
        def bind_future_result(
            self, function: Callable[[T], Awaitable[FutureResult[N, E]]],
        ) -> MyClass[E, N]:
            ...

        def bind_async_future_result(
            self, function: Callable[[T], FutureResult[N, E]],
        ) -> MyClass[E, N]:
            ...

        def from_future_result(
            cls, inner_value: FutureResult[T, E],
        ) -> MyClass[T, E]:
            ...

        @classmethod
        def from_failed_future(
            cls, inner_value: Future[E],
        ) -> FutureResult[Any, E]:
            ...
  out: |
    main:16: error: Argument 1 of "bind_future_result" is incompatible with supertype "FutureResultLikeN"; supertype defines the argument type as "Callable[[T], FutureResult[_UpdatedType, E]]"
    main:16: error: Return type "MyClass[E, N]" of "bind_future_result" incompatible with return type "KindN[MyClass[T, E], _UpdatedType, E, NoReturn]" in supertype "FutureResultLikeN"
    main:16: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
    main:16: note: This violates the Liskov substitution principle
    main:21: error: Argument 1 of "bind_async_future_result" is incompatible with supertype "FutureResultLikeN"; supertype defines the argument type as "Callable[[T], Awaitable[FutureResult[_UpdatedType, E]]]"
    main:21: error: Return type "MyClass[E, N]" of "bind_async_future_result" incompatible with return type "KindN[MyClass[T, E], _UpdatedType, E, NoReturn]" in supertype "FutureResultLikeN"
    main:21: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
    main:21: note: This violates the Liskov substitution principle
    main:26: error: Argument 1 of "from_future_result" is incompatible with supertype "FutureResultLikeN"; supertype defines the argument type as "FutureResult[_ValueType, _ErrorType]"
    main:26: error: Return type "MyClass[T, E]" of "from_future_result" incompatible with return type "KindN[MyClass[T, E], _ValueType, _ErrorType, NoReturn]" in supertype "FutureResultLikeN"
    main:26: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
    main:26: note: This violates the Liskov substitution principle
    main:32: error: Argument 1 of "from_failed_future" is incompatible with supertype "FutureResultLikeN"; supertype defines the argument type as "Future[_ErrorType]"
    main:32: error: Return type "FutureResult[Any, E]" of "from_failed_future" incompatible with return type "KindN[MyClass[T, E], T, _ErrorType, NoReturn]" in supertype "FutureResultLikeN"
    main:32: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
    main:32: note: This violates the Liskov substitution principle
