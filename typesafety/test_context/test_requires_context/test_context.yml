- case: context_ask1
  disable_cache: false
  main: |
    from returns.context import RequiresContext

    reveal_type(RequiresContext.ask())  # N: Revealed type is "returns.context.requires_context.RequiresContext[Never, Never]"


- case: context_ask2
  disable_cache: false
  main: |
    from returns.context import RequiresContext

    reveal_type(RequiresContext[int, str].ask())  # N: Revealed type is "returns.context.requires_context.RequiresContext[builtins.str, builtins.str]"


- case: requires_context_from_value
  disable_cache: false
  main: |
    from returns.context import RequiresContext

    reveal_type(RequiresContext.from_value(1))  # N: Revealed type is "returns.context.requires_context.RequiresContext[builtins.int, Any]"


- case: requires_context_from_context
  disable_cache: false
  main: |
    from returns.context import RequiresContext

    x: RequiresContext[int, str]
    reveal_type(RequiresContext.from_context(x))  # N: Revealed type is "returns.context.requires_context.RequiresContext[builtins.int, builtins.str]"
