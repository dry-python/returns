- case: requires_context_future_result_success
  disable_cache: false
  main: |
    from returns.context import RequiresContextFutureResult

    reveal_type(RequiresContextFutureResult.from_value(1))  # N: Revealed type is "returns.context.requires_context_future_result.RequiresContextFutureResult[builtins.int*, Any, Any]"


- case: requires_context_future_result_failure
  disable_cache: false
  main: |
    from returns.context import RequiresContextFutureResult

    reveal_type(RequiresContextFutureResult.from_failure(1))  # N: Revealed type is "returns.context.requires_context_future_result.RequiresContextFutureResult[Any, builtins.int*, Any]"


- case: requires_context_future_result_result
  disable_cache: false
  main: |
    from returns.context import RequiresContextFutureResult
    from returns.result import Result

    r: Result[int, str]

    reveal_type(RequiresContextFutureResult.from_result(r))  # N: Revealed type is "returns.context.requires_context_future_result.RequiresContextFutureResult[builtins.int*, builtins.str*, Any]"


- case: requires_context_future_result_io
  disable_cache: false
  main: |
    from returns.context import RequiresContextFutureResult
    from returns.io import IO

    r: IO[int]

    reveal_type(RequiresContextFutureResult.from_io(r))  # N: Revealed type is "returns.context.requires_context_future_result.RequiresContextFutureResult[builtins.int*, Any, Any]"


- case: requires_context_future_result_failed_io
  disable_cache: false
  main: |
    from returns.context import RequiresContextFutureResult
    from returns.io import IO

    r: IO[int]

    reveal_type(RequiresContextFutureResult.from_failed_io(r))  # N: Revealed type is "returns.context.requires_context_future_result.RequiresContextFutureResult[Any, builtins.int*, Any]"


- case: requires_context_future_result_ioresult
  disable_cache: false
  main: |
    from returns.context import RequiresContextFutureResult
    from returns.io import IOResult

    r: IOResult[int, str]

    reveal_type(RequiresContextFutureResult.from_ioresult(r))  # N: Revealed type is "returns.context.requires_context_future_result.RequiresContextFutureResult[builtins.int*, builtins.str*, Any]"


- case: requires_context_future_result_future
  disable_cache: false
  main: |
    from returns.context import RequiresContextFutureResult
    from returns.future import Future

    r: Future[int]

    reveal_type(RequiresContextFutureResult.from_future(r))  # N: Revealed type is "returns.context.requires_context_future_result.RequiresContextFutureResult[builtins.int*, Any, Any]"


- case: requires_context_future_result_failed_future
  disable_cache: false
  main: |
    from returns.context import RequiresContextFutureResult
    from returns.future import Future

    r: Future[int]

    reveal_type(RequiresContextFutureResult.from_failed_future(r))  # N: Revealed type is "returns.context.requires_context_future_result.RequiresContextFutureResult[Any, builtins.int*, Any]"


- case: requires_context_future_result_future_result
  disable_cache: false
  main: |
    from returns.context import RequiresContextFutureResult
    from returns.future import FutureResult

    r: FutureResult[int, str]

    reveal_type(RequiresContextFutureResult.from_future_result(r))  # N: Revealed type is "returns.context.requires_context_future_result.RequiresContextFutureResult[builtins.int*, builtins.str*, Any]"


- case: requires_context_future_result_typecast
  disable_cache: false
  main: |
    from returns.context import RequiresContextFutureResult, RequiresContext
    from returns.future import FutureResult

    r: RequiresContext[FutureResult[int, str], float]

    reveal_type(RequiresContextFutureResult.from_typecast(r))  # N: Revealed type is "returns.context.requires_context_future_result.RequiresContextFutureResult[builtins.int*, builtins.str*, builtins.float*]"


- case: requires_context_future_result_successful_context
  disable_cache: false
  main: |
    from returns.context import RequiresContextFutureResult, RequiresContext

    r: RequiresContext[str, float]

    reveal_type(RequiresContextFutureResult.from_context(r))  # N: Revealed type is "returns.context.requires_context_future_result.RequiresContextFutureResult[builtins.str*, Any, builtins.float*]"


- case: requires_context_future_result_failed_context
  disable_cache: false
  main: |
    from returns.context import RequiresContextFutureResult, RequiresContext

    r: RequiresContext[str, float]

    reveal_type(RequiresContextFutureResult.from_failed_context(r))  # N: Revealed type is "returns.context.requires_context_future_result.RequiresContextFutureResult[Any, builtins.str*, builtins.float*]"


- case: requires_context_future_result_from_result_context
  disable_cache: false
  main: |
    from returns.context import RequiresContextFutureResult, RequiresContextResult

    r: RequiresContextResult[int, str, float]

    reveal_type(RequiresContextFutureResult.from_result_context(r))  # N: Revealed type is "returns.context.requires_context_future_result.RequiresContextFutureResult[builtins.int*, builtins.str*, builtins.float*]"


- case: requires_context_future_result_from_ioresult_context
  disable_cache: false
  main: |
    from returns.context import RequiresContextFutureResult, RequiresContextIOResult

    r: RequiresContextIOResult[int, str, float]

    reveal_type(RequiresContextFutureResult.from_ioresult_context(r))  # N: Revealed type is "returns.context.requires_context_future_result.RequiresContextFutureResult[builtins.int*, builtins.str*, builtins.float*]"
