- case: requires_context_ioresult_success
  disable_cache: false
  main: |
    from returns.context import RequiresContextIOResult

    reveal_type(RequiresContextIOResult.from_value(1))  # N: Revealed type is "returns.context.requires_context_ioresult.RequiresContextIOResult[builtins.int*, Any, Any]"


- case: requires_context_ioresult_failure
  disable_cache: false
  main: |
    from returns.context import RequiresContextIOResult

    reveal_type(RequiresContextIOResult.from_failure(1))  # N: Revealed type is "returns.context.requires_context_ioresult.RequiresContextIOResult[Any, builtins.int*, Any]"


- case: requires_context_ioresult_result
  disable_cache: false
  main: |
    from returns.context import RequiresContextIOResult
    from returns.result import Result

    r: Result[int, str]

    reveal_type(RequiresContextIOResult.from_result(r))  # N: Revealed type is "returns.context.requires_context_ioresult.RequiresContextIOResult[builtins.int*, builtins.str*, Any]"


- case: requires_context_ioresult_io
  disable_cache: false
  main: |
    from returns.context import RequiresContextIOResult
    from returns.io import IO

    r: IO[int]

    reveal_type(RequiresContextIOResult.from_io(r))  # N: Revealed type is "returns.context.requires_context_ioresult.RequiresContextIOResult[builtins.int*, Any, Any]"


- case: requires_context_ioresult_failed_io
  disable_cache: false
  main: |
    from returns.context import RequiresContextIOResult
    from returns.io import IO

    r: IO[int]

    reveal_type(RequiresContextIOResult.from_failed_io(r))  # N: Revealed type is "returns.context.requires_context_ioresult.RequiresContextIOResult[Any, builtins.int*, Any]"


- case: requires_context_ioresult_ioresult
  disable_cache: false
  main: |
    from returns.context import RequiresContextIOResult
    from returns.io import IOResult

    r: IOResult[int, str]

    reveal_type(RequiresContextIOResult.from_ioresult(r))  # N: Revealed type is "returns.context.requires_context_ioresult.RequiresContextIOResult[builtins.int*, builtins.str*, Any]"


- case: requires_context_ioresult_typecast
  disable_cache: false
  main: |
    from returns.context import RequiresContextIOResult, RequiresContext
    from returns.io import IOResult

    r: RequiresContext[IOResult[int, str], float]

    reveal_type(RequiresContextIOResult.from_typecast(r))  # N: Revealed type is "returns.context.requires_context_ioresult.RequiresContextIOResult[builtins.int*, builtins.str*, builtins.float*]"


- case: requires_context_ioresult_successful_context
  disable_cache: false
  main: |
    from returns.context import RequiresContextIOResult, RequiresContext

    r: RequiresContext[str, float]

    reveal_type(RequiresContextIOResult.from_context(r))  # N: Revealed type is "returns.context.requires_context_ioresult.RequiresContextIOResult[builtins.str*, Any, builtins.float*]"


- case: requires_context_ioresult_failed_context
  disable_cache: false
  main: |
    from returns.context import RequiresContextIOResult, RequiresContext

    r: RequiresContext[str, float]

    reveal_type(RequiresContextIOResult.from_failed_context(r))  # N: Revealed type is "returns.context.requires_context_ioresult.RequiresContextIOResult[Any, builtins.str*, builtins.float*]"


- case: requires_context_ioresult_from_result_context
  disable_cache: false
  main: |
    from returns.context import RequiresContextIOResult, RequiresContextResult

    r: RequiresContextResult[int, str, float]

    reveal_type(RequiresContextIOResult.from_result_context(r))  # N: Revealed type is "returns.context.requires_context_ioresult.RequiresContextIOResult[builtins.int*, builtins.str*, builtins.float*]"
