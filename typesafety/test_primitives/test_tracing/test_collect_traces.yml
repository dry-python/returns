- case: collect_traces_context_manager_return_type_one
  disable_cache: false
  main: |
    from returns.primitives.tracing import collect_traces

    reveal_type(collect_traces)  # N: Revealed type is "Overload(def () -> contextlib.AbstractContextManager[None], def [_FunctionType <: def (*Any, **Any) -> Any] (function: _FunctionType`-1) -> _FunctionType`-1)"

- case: collect_traces_context_manager_return_type_two
  disable_cache: false
  main: |
    from returns.primitives.tracing import collect_traces

    with reveal_type(collect_traces()):  # N: Revealed type is "contextlib.AbstractContextManager[None]"
        pass

- case: collect_traces_decorated_function_return_type
  disable_cache: false
  main: |
    from returns.primitives.tracing import collect_traces

    @collect_traces
    def function() -> int:
      return 0

    reveal_type(function)  # N: Revealed type is "def () -> builtins.int"

- case: collect_traces_decorated_function_with_argument_return_type
  disable_cache: false
  main: |
    from returns.primitives.tracing import collect_traces

    @collect_traces
    def function(number: int) -> str:
      return str(number)

    reveal_type(function)  # N: Revealed type is "def (number: builtins.int) -> builtins.str"
