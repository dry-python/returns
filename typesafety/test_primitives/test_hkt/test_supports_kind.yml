- case: supports_kind_getattr_existing
  disable_cache: false
  main: |
    from returns.primitives.hkt import SupportsKind1
    from typing import List

    container: SupportsKind1[List, int]
    container.pop  # E: "SupportsKindN[List[Any], int, NoReturn, NoReturn]" has no attribute "pop"


- case: supports_kind_getattr_missing
  disable_cache: false
  main: |
    from returns.primitives.hkt import SupportsKindN

    container: SupportsKindN[object, int, str, bool]
    container.missing
  out: |
    main:4: error: "SupportsKindN[object, int, str, bool]" has no attribute "missing"


- case: supports_kind_getattr_subclass
  disable_cache: false
  main: |
    from returns.primitives.hkt import SupportsKind1
    from typing import TypeVar

    T = TypeVar('T')

    class Custom(SupportsKind1['Custom', T]):
        existing: T

    container: Custom[int]
    reveal_type(container.existing)
    reveal_type(container.missing)
  out: |
    main:10: note: Revealed type is 'builtins.int*'
    main:11: error: "Custom[int]" has no attribute "missing"
    main:11: note: Revealed type is 'Any'
