- case: bind_context_future_result_wrong
  disable_cache: false
  main: |
    from returns.pointfree import bind_context_future_result
    from returns.context import RequiresContextFutureResult

    def test(arg: float) -> RequiresContextFutureResult[int, str, str]:
        ...

    x: RequiresContextFutureResult[float, bool, bool]
    bind_context_future_result(test)(x)  # E: Argument 1 has incompatible type "RequiresContextFutureResult[float, bool, bool]"; expected "KindN[RequiresContextFutureResult[Any, Any, Any], float, str, str]"


- case: bind_context_future_result_requires_context_future_result
  disable_cache: false
  main: |
    from returns.pointfree import bind_context_future_result
    from returns.context import RequiresContextFutureResult

    def test(arg: float) -> RequiresContextFutureResult[int, str, bool]:
        ...

    x: RequiresContextFutureResult[float, str, bool]
    reveal_type(bind_context_future_result(test)(x))  # N: Revealed type is 'returns.context.requires_context_future_result.RequiresContextFutureResult*[builtins.int, builtins.str, builtins.bool]'
