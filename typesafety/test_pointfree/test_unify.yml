- case: unify_result
  disable_cache: true
  main: |
    from returns.pointfree import unify
    from returns.result import Result

    def test(arg: float) -> Result[int, str]:
        ...

    x: Result[int, bool]

    reveal_type(unify(test))  # N: Revealed type is 'def [_ErrorType] (returns.result.Result[builtins.float*, _ErrorType`-4]) -> returns.result.Result[builtins.int*, Union[_ErrorType`-4, builtins.str*]]'
    reveal_type(unify(test)(x))  # N: Revealed type is 'returns.result.Result[builtins.int, Union[builtins.bool*, builtins.str]]'


- case: unify_ioresult
  disable_cache: true
  main: |
    from returns.pointfree import unify
    from returns.io import IOResult

    def test(arg: float) -> IOResult[int, str]:
        ...

    x: IOResult[int, bool]

    reveal_type(unify(test))  # N: Revealed type is 'def [_ErrorType] (returns.io.IOResult[builtins.float*, _ErrorType`-4]) -> returns.io.IOResult[builtins.int*, Union[_ErrorType`-4, builtins.str*]]'
    reveal_type(unify(test)(x))  # N: Revealed type is 'returns.io.IOResult[builtins.int, Union[builtins.bool*, builtins.str]]'


- case: unify_ioresult
  disable_cache: true
  main: |
    from returns.pointfree import unify
    from returns.future import FutureResult

    def test(arg: float) -> FutureResult[int, str]:
        ...

    x: FutureResult[int, bool]

    reveal_type(unify(test))  # N: Revealed type is 'def [_ErrorType] (returns.future.FutureResult[builtins.float*, _ErrorType`-4]) -> returns.future.FutureResult[builtins.int*, Union[_ErrorType`-4, builtins.str*]]'
    reveal_type(unify(test)(x))  # N: Revealed type is 'returns.future.FutureResult[builtins.int, Union[builtins.bool*, builtins.str]]'
