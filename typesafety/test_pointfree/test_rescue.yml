- case: rescue_result
  disable_cache: true
  main: |
    from returns.pointfree import rescue
    from returns.result import Result

    def test(arg: float) -> Result[int, str]:
        ...

    reveal_type(rescue(test))  # N: Revealed type is 'def (returns.result.Result[builtins.int*, builtins.float*]) -> returns.result.Result[builtins.int*, builtins.str*]'


- case: rescue_ioresult
  disable_cache: true
  main: |
    from returns.pointfree import rescue
    from returns.io import IOResult

    def test(arg: float) -> IOResult[int, str]:
        ...

    reveal_type(rescue(test))  # N: Revealed type is 'def (returns.io.IOResult[builtins.int*, builtins.float*]) -> returns.io.IOResult[builtins.int*, builtins.str*]'


- case: rescue_context_result
  disable_cache: true
  main: |
    from returns.pointfree import rescue
    from returns.context import RequiresContextResult

    def test(arg: float) -> RequiresContextResult[int, float, str]:
        ...

    reveal_type(rescue(test))  # N: Revealed type is 'def (returns.context.requires_context_result.RequiresContextResult[builtins.int*, builtins.float*, builtins.float*]) -> returns.context.requires_context_result.RequiresContextResult[builtins.int*, builtins.float*, builtins.str*]'


- case: rescue_context_ioresult
  disable_cache: true
  main: |
    from returns.pointfree import rescue
    from returns.context import RequiresContextIOResult

    def test(arg: float) -> RequiresContextIOResult[int, float, str]:
        ...

    reveal_type(rescue(test))  # N: Revealed type is 'def (returns.context.requires_context_ioresult.RequiresContextIOResult[builtins.int*, builtins.float*, builtins.float*]) -> returns.context.requires_context_ioresult.RequiresContextIOResult[builtins.int*, builtins.float*, builtins.str*]'


- case: rescue_future_result
  disable_cache: true
  main: |
    from returns.pointfree import rescue
    from returns.future import FutureResult

    def test(arg: float) -> FutureResult[int, str]:
        ...

    reveal_type(rescue(test))  # N: Revealed type is 'def (returns.future.FutureResult[builtins.int*, builtins.float*]) -> returns.future.FutureResult[builtins.int*, builtins.str*]'
